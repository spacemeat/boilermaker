@{ app: boma, boma-version: 0.0.4 }
{
    inherit: c++|gnu
    enums: [{
            tools: gnu
            source: [<vulkan/vulkan.h>]
            languageVersion: c|gnu17
            platform: vulkan
        }
    ]
    types: {
        couple: {
            a: string
            b: .VkResult
        }

        v_of_couples: {
            couples: { type: vector of: couple }
        }

        v_of_a_of_couples: {
            coupleses: { type: vector of: { type: array of: [couple, 4] } }
        }

        wut: {
            huh: {
                type: vector
                of: [ {
                        type: array
                        of: [ {
                                type: optional
                                of: [ {
                                        type: variant
                                        of: [ {
                                                type: pair
                                                of: [string, string]
                                            } {
                                                type: tuple
                                                of: [size_t, int, double]
                                            } {
                                                type: map
                                                of: [string, int]
                                            } {
                                                type: unordered_map
                                                of: [string, int]
                                            } {
                                                type: set
                                                of: [ {
                                                        type: unordered_map
                                                        of: [int, couple]
                                                    }
                                                ]
                                                isLess: "return lhs.begin()->second.get_a() < rhs.begin()->second.get_a();"
                                            } {
                                                type: unordered_set
                                                of: string
                                            } {
                                                alias: setOfMaps
                                                type: set
                                                of: [ {
                                                        type: map
                                                        of: [float, int]
                                                        isLess: "return lhs < rhs;"
                                                    }
                                                ]
                                                isLess: "return lhs.begin()->second < rhs.begin()->second;"
                                            }
                                        ]
                                    }
                                ]
                            }, 4
                        ]
                    }
                ]
            }
        }
    }

    variants: {
        txtToBin: {
            headerDir: $<baseDir>/gen-cpp/txtToBin/inc/boma
            inlineDir: $<baseDir>/gen-cpp/txtToBin/inc/boma/inl
            sourceDir: $<baseDir>/gen-cpp/txtToBin/src/boma

            namespace: txtToBin
            outputForm: compiled
            deserializeFrom: [humon, binary]
            serializeTo: [humon, binary]
            defaultConstructible: true      // done
            memberwiseConstructible: true   // done
            virtualDestructor: false         // done
            copyable: true                  // done
            movable: true                   // done
            getters: true                   // done
            setters: true                   // done
            privateMembers: true            // done
            comparable: true                // done
            diffable: true                  // done
            caveperson: []
        }
        app: {
            headerDir: $<baseDir>/gen-cpp/app/inc/boma
            inlineDir: $<baseDir>/gen-cpp/app/inc/boma/inl
            sourceDir: $<baseDir>/gen-cpp/app/src/boma

            namespace: app
            initFromDefault: true
            deserializeFrom: [humon, binary]
            serializeTo: [humon, binary]
            copyable: true
            comparable: true
            diffable: true
        }
    }
}
