@{ app: boma, boma-version: 0.0.4 }
{
    run: {
        name:           vulkan
        plugin:         vulkan
        provider:       provider
        output:         output
        ops:            { parseSources: 1.0 makeEnums: 1.1 makeChainStructs: 1.2 }
        sources:        ['<vulkan/vulkan.h>']
        macros:         { }
        tools:          gnu
        language:       c
        languageVersion: 17
        languageStandard: gnu17
        enums: {
            flags: {
                nameContains: FlagBits
            }

            prefix: {
                exclude: common
                delimit: _
            }

            suffix: {
                exclude: common
                delimit: _
            }

            case: {
                encode: lower
            }
        }

        structureChains: {
            features: {
                structureChainName: VkFeatures
                mainStructName: VkPhysicalDeviceFeatures2
                mainStructStype: VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2
                baseProviderName: vulkan_1_0
                baseProviderStructName: VkPhysicalDeviceFeatures
                baseProviderMemberName: features
                hasSetters: true
                chainStructs: [ {
                        structName: VkPhysicalDeviceVulkan11Features
                        providerName: vulkan_1_1
                        sType: VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES
                    }, {
                        structName: VkPhysicalDeviceVulkan12Features
                        providerName: vulkan_1_2
                        sType: VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES
                    }, {
                        structName: VkPhysicalDeviceVulkan13Features
                        providerName: vulkan_1_3
                        sType: VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES
                    }, {
                        structName: VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR
                        providerName: global_priority_query
                        sType: VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR
                    }
                ]
            }
            properties: {
                structureChainName: VkProperties
                mainStructName: VkPhysicalDeviceProperties2
                mainStructStype: VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2
                baseProviderName: vulkan_1_0
                baseProviderStructName: VkPhysicalDeviceProperties
                baseProviderMemberName: properties
                hasSetters: false
                chainStructs: [ {
                        structName: VkPhysicalDeviceVulkan11Properties
                        providerName: vulkan_1_1
                        sType: VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES
                    }, {
                        structName: VkPhysicalDeviceVulkan12Properties
                        providerName: vulkan_1_2
                        sType: VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES
                    }, {
                        structName: VkPhysicalDeviceVulkan13Properties
                        providerName: vulkan_1_3
                        sType: VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES
                    }
                ]
            }
            queueFamilies: {
                structureChainName: VkQueueFamilies
                mainStructName: VkQueueFamilyProperties2
                mainStructStype: VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2
                baseProviderName: vulkan_1_0
                baseProviderStructName: VkQueueFamilyProperties
                baseProviderMemberName: queueFamilyProperties
                hasSetters: false
                chainStructs: [ {
                        structName: VkQueueFamilyCheckpointProperties2NV
                        providerName: device_diagnostic_checkpoints2
                        sType: VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV
                    }, {
                        structName: VkQueueFamilyCheckpointPropertiesNV
                        providerName: device_diagnostic_checkpoints
                        sType: VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV
                    }, {
                        structName: VkQueueFamilyGlobalPriorityPropertiesKHR
                        providerName: global_priority
                        sType: VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR
                    }/*, {
                        structName: VkQueueFamilyQueryResultStatusProperties2KHR
                        providerName: video_queue_query
                        sType: VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_2_KHR
                    }, {
                        structName: VkVideoQueueFamilyProperties2KHR
                        providerName: video_queue
                        sType: VK_STRUCTURE_TYPE_VIDEO_QUEUE_FAMILY_PROPERTIES_2_KHR
                    }*/
                ]
            }
        }
    }

    vkMainHeaderFile: vk.hpp
    vkMainHeaderPath: $sharedCodeHeaderDir/vk.hpp
    vkMainSourceFile: vk.cpp
    vkMainSourcePath: $sharedCodeSourceDir/vk.cpp
    vkChainStructsHeaderFile: vkChainStructs.hpp
    vkChainStructsHeaderPath: $sharedCodeHeaderDir/$vkChainStructsHeaderFile
    vkChainStructsSourceFile: vkChainStructs.cpp
    vkChainStructsSourcePath: $sharedCodeSourceDir/$vkChainStructsSourceFile
}
