$<out $commonSourcePath>$+
$sourceTopComment

#include "$srcToHeader/$commonHeaderFile"
$+$<join for type in $commonHeaderFwdDecls>
#include "$srcToHeader/$type.hpp"$<endjoin>

$<if 'binary' in $serializeTo>

namespace $namespace
{
    $+  $<if $std.string.usedInBomaType>
    std::ostream & operator << (std::ostream & out, $<$const('BinaryFormat<std::string$>')> & obj)
    {
        out << BinaryFormat(obj->size());
        out.write(obj->data(), obj->size());

        return out;
    }$+
$<endif>
    $+  $<if $std.stringView.usedInBomaType>
    std::ostream & operator << (std::ostream & out, $<$const('BinaryFormat<std::string_view$>')> & obj)
    {
        out << BinaryFormat(obj->size());
        out.write(obj->data(), obj->size());

        return out;
    }$+
$<endif>$''
}
$+$<endif>
$<endout>
