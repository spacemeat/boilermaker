@{ app: boma, boma-version: 0.0.4 }
{
    inherit: [boilermaker]

    run: {
        plugin:         $constructPlugin
        provider:       $constructProvider
        output:         $constructScribe
        ops:            { buildPoject:    $constructbuildPojectSequence }
    }

    constructPlugin:                construct
    constructProvider:              provider

    constructbuildPojectSequence:     9

    buildDir: $projectDir/build
    tempOutputDir: $buildDir/$targetName/int
    outputDir: $buildDir/bin
    libDir: $buildDir/lib
    testDir: $buildDir/test
    runScriptDir: $projectDir

    targetName:             $groupName

    outputObjectPath:       `$tempOutputDir/$<$source.srcPath.stem>$<if $buildKind!="release">.$buildKind$<endif>.o`
    outputProjectObjectPath:`$tempOutputDir/$<$targetName>$<if $buildKind!="release">.$buildKind$<endif>.o`
    outputName:             $targetName
    outputLibName:          lib$<$outputFullName>.a
    outputFullName:         `$outputName$<if $buildKind!="release">.$buildKind$<endif>`
    outputLibPath:          $outputDir/$outputLibName
    outputPath:             $outputDir/$outputFullName

    buildKind:          debug   // or release   // TODO: buildProfile
    tools:              gnu
    language:           c++
    languageVersion:    2a
    languageStandard:   c++2a
    diagnosticFormat:   json    // for geg; set this to text for traditional build
    diagnosticTemplateTrees: false

    warns:                  [Wall, Wextra, pedantic]
    compileOptions:         []
    linkOptions:            []
    compileAndLinkOptions:  []

    wholeProject:       false
    clearTempDir:       false
    forceRebuild:       false

    outputRunScript: true
    runScript: $runScriptDir/run$outputExeName.sh

    sources: []
    includeDirs: []
    linkDirs: []
    libs: []
    pkgs: []

    targets: ''
}
