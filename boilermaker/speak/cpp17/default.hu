@{ app: boma, boma-version: 0.0.4 }
{
    inherit:        boilermaker

    language:       c++
    languageVersion: 17
    action: {
        provider:     $cpp17Provider
        phases:       $cpp17Phases
    }

    cave:           ['deserializeBinary']

    cpp17Provider:  cpp17
    cpp17Phases:    [enums, types, transform, output]

    constStyle:     west
    outputForm:     compiled  // or headerOnly, or anything else in outupt
    caveperson:     []// [ctr, dtr, ass, serializeBinary, deserializeBinary]
    checkBinaryOverruns: true
    caveStream:     `std::cerr`

    generatedFileComment: `/*  THIS IS A GENERATED FILE. It is a Boilermaker artifact.
    Do not bother modifying this file, as your build process will overwrite
    your changes.`

    mainHeaderTopComment: `$generatedFileComment

    #include this header in your project to use boilermaker-generated code.*/`

    headerTopComment: `$generatedFileComment */`
    inlineTopComment: `$generatedFileComment */`
    sourceTopComment: `$generatedFileComment */`

    deserializeFrom: [humon] // also accepts binary
    defaultConstructible: false
    memberwiseConstructible: false
    virtualDestructor: false
    privateMembers: true
    swap: '$<$copyByCopySwap or $moveByCopySwap>'
    copyByCopySwap: true    // requires swap and copyable
    moveByCopySwap: true    // requires swap and copyable
    copyable: true
    movable: true       // i think requires virtualDestructor to be false
    getters: '$<$inlineGetters or $constGetters or $nonConstGetters>'
    inlineGetters: true     // requires getters
    constGetters: true      // requires getters
    nonConstGetters: true   // requires getters, privateMembers
    setters: true
    inlineSetters: true // requires setters
    setByCopy: true // requires copyable
    setByMove: true   // requires movable
    serializeTo: []
    comparable: true
    diffable: false  // requires comparable

    headerDir:              $baseDir/gen-cpp/$namespace/inc
    inlineDir:              $baseDir/gen-cpp/$namespace/inc/inl
    sourceDir:              $baseDir/gen-cpp/$namespace/src
    mainHeaderFile:         $namespace.hpp
    commonHeaderFile:       common.hpp
    commonInlineFile:       common.inl.hpp
    commonSourceFile:       common.cpp
    diffsHeaderFile:        diffs.hpp
    enumsHeaderFile:        enums.hpp
    enumsInlineFile:        enums.inl.hpp
    enumsSourceFile:        enums.cpp
    typeHeaderFile:         $<$type.name>.hpp
    typeInlineFile:         $<$type.name>.inl.hpp
    typeSourceFile:         $<$type.name>.cpp

    mainHeaderPath:         $headerDir/$mainHeaderFile
    commonHeaderPath:       $headerDir/$commonHeaderFile
    commonInlinePath:       $inlineDir/$commonInlineFile
    commonSourcePath:       $sourceDir/$commonSourceFile
    diffsHeaderPath:        $headerDir/$diffsHeaderFile
    enumsHeaderPath:        $headerDir/$enumsHeaderFile
    enumsInlinePath:        $inlineDir/$enumsInlineFile
    enumsSourcePath:        $sourceDir/$enumsSourceFile
    typeHeaderPath:         $headerDir/$typeHeaderFile
    typeInlinePath:         $inlineDir/$typeInlineFile
    typeSourcePath:         $sourceDir/$typeSourceFile
}
